{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\n// bởi vì đang viết 1 customhook nên \n// một cái customhook cần phải bắt đầu với keyword use\n// khi có keyword use thì react mới hiểu đây là customhook\nconst useFetch = (url, isCovidData) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  // = với hàm componentDidMount\n  useEffect(() => {\n    const ourRequest = axios.CancelToken.source();\n    async function fetchData() {\n      // handle lỗi sử dụng try/catch(e)\n      try {\n        // setTimeout(async() => {\n        let res = await axios.get(url, {\n          cancelToken: ourRequest.token // <-- 2nd step\n        });\n\n        // dấu ? dùng để trả về true/false\n        let data = res && res.data ? res.data : [];\n        // giải thích code dòng trên:\n        // nếu điều kiện (res && res.data) đúng (có giá trị) thì gán biến data = res.data\n        // cón nếu điều kiện (res && res.data) (không có giá trị) sai thì gán biến data = []\n\n        // nếu không dùng dấu ? thì có thể viết theo kiểu truyền thống bằng if/else\n        // let data = null;\n        // if (res && res.data) {\n        //     data = res.data;\n        // } else {\n        //     data =[]\n        // }\n\n        if (data && data.length > 0 && isCovidData === true) {\n          data.map(item => {\n            item.Date = moment(item.Date).format('DD/MM/YYYY');\n            return item;\n          });\n          data = data.reverse();\n          // .reverse() dùng để hiện thị ngược dữ liệu \n        }\n\n        setData(data);\n        setIsLoading(false);\n        setIsError(false);\n        // ở đây có 3 lần set lại State nên component render lại 3 lần\n      }\n\n      // fetchData();\n\n      // }, 3000)\n      catch (err) {\n        if (axios.isCancel(err)) {\n          console.log('Request canceled', err.message);\n        } else {\n          setIsError(true);\n          setIsLoading(false);\n        }\n      }\n    }\n    setTimeout(() => {\n      fetchData();\n    }, 2000);\n    return () => {\n      ourRequest.cancel('Operation canceled by the user.'); // <-- 3rd step\n    };\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    isError\n  };\n};\n_s(useFetch, \"H2KGaJrQlOmuWQVqjm/gJJHKp3w=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","axios","moment","useFetch","url","isCovidData","_s","data","setData","isLoading","setIsLoading","isError","setIsError","ourRequest","CancelToken","source","fetchData","res","get","cancelToken","token","length","map","item","Date","format","reverse","err","isCancel","console","log","message","setTimeout","cancel"],"sources":["/Users/cuongcay/Documents/STUDY/FRONTEND/HIEP/src/customize/fetch.js"],"sourcesContent":["import {useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\n\n// bởi vì đang viết 1 customhook nên \n// một cái customhook cần phải bắt đầu với keyword use\n// khi có keyword use thì react mới hiểu đây là customhook\nconst useFetch = (url, isCovidData) => {\n    const [ data, setData] = useState ([]);\n\n    const [isLoading, setIsLoading] = useState (true);\n\n    const [isError, setIsError] = useState (false);\n    // = với hàm componentDidMount\n    useEffect ( () => {\n        const ourRequest = axios.CancelToken.source()\n\n        async function fetchData() {\n        // handle lỗi sử dụng try/catch(e)\n            try {\n                \n                // setTimeout(async() => {\n                let res = await axios.get(url, {\n                    cancelToken: ourRequest.token, // <-- 2nd step\n                    })\n                    \n                // dấu ? dùng để trả về true/false\n                let data = res && res.data ? res.data : []; \n                // giải thích code dòng trên:\n                // nếu điều kiện (res && res.data) đúng (có giá trị) thì gán biến data = res.data\n                // cón nếu điều kiện (res && res.data) (không có giá trị) sai thì gán biến data = []\n\n\n                // nếu không dùng dấu ? thì có thể viết theo kiểu truyền thống bằng if/else\n                // let data = null;\n                // if (res && res.data) {\n                //     data = res.data;\n                // } else {\n                //     data =[]\n                // }\n            \n                if(data && data.length > 0 && isCovidData === true) {\n                    data.map(item => {\n                        item.Date = moment(item.Date).format('DD/MM/YYYY');\n                        return item;\n                    })\n\n                    data = data.reverse()\n                    // .reverse() dùng để hiện thị ngược dữ liệu \n                }\n\n                setData(data);\n                setIsLoading(false);\n                setIsError(false);\n                // ở đây có 3 lần set lại State nên component render lại 3 lần\n            }\n\n                // fetchData();\n\n            // }, 3000)\n            catch(err) {\n                if (axios.isCancel(err)) {\n                    console.log('Request canceled', err.message);\n                  } else {\n                    setIsError(true);\n                    setIsLoading(false);\n                }\n                \n            }\n        }\n\n        setTimeout(() => {\n            fetchData();\n        },2000);\n\n        return () => {\n            ourRequest.cancel('Operation canceled by the user.') // <-- 3rd step\n        }\n        \n    },[url]);\n\n    return {\n        data, isLoading, isError\n    }\n\n}\n\nexport  default useFetch;"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;;AAG3B;AACA;AACA;AACA,MAAMC,QAAQ,GAAGA,CAACC,GAAG,EAAEC,WAAW,KAAK;EAAAC,EAAA;EACnC,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAE,EAAE,CAAC;EAEtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAE,IAAI,CAAC;EAEjD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAE,KAAK,CAAC;EAC9C;EACAD,SAAS,CAAG,MAAM;IACd,MAAMc,UAAU,GAAGZ,KAAK,CAACa,WAAW,CAACC,MAAM,EAAE;IAE7C,eAAeC,SAASA,CAAA,EAAG;MAC3B;MACI,IAAI;QAEA;QACA,IAAIC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAACd,GAAG,EAAE;UAC3Be,WAAW,EAAEN,UAAU,CAACO,KAAK,CAAE;QAC/B,CAAC,CAAC;;QAEN;QACA,IAAIb,IAAI,GAAGU,GAAG,IAAIA,GAAG,CAACV,IAAI,GAAGU,GAAG,CAACV,IAAI,GAAG,EAAE;QAC1C;QACA;QACA;;QAGA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA,IAAGA,IAAI,IAAIA,IAAI,CAACc,MAAM,GAAG,CAAC,IAAIhB,WAAW,KAAK,IAAI,EAAE;UAChDE,IAAI,CAACe,GAAG,CAACC,IAAI,IAAI;YACbA,IAAI,CAACC,IAAI,GAAGtB,MAAM,CAACqB,IAAI,CAACC,IAAI,CAAC,CAACC,MAAM,CAAC,YAAY,CAAC;YAClD,OAAOF,IAAI;UACf,CAAC,CAAC;UAEFhB,IAAI,GAAGA,IAAI,CAACmB,OAAO,EAAE;UACrB;QACJ;;QAEAlB,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAC,KAAK,CAAC;QACnBE,UAAU,CAAC,KAAK,CAAC;QACjB;MACJ;;MAEI;;MAEJ;MACA,OAAMe,GAAG,EAAE;QACP,IAAI1B,KAAK,CAAC2B,QAAQ,CAACD,GAAG,CAAC,EAAE;UACrBE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,GAAG,CAACI,OAAO,CAAC;QAC9C,CAAC,MAAM;UACLnB,UAAU,CAAC,IAAI,CAAC;UAChBF,YAAY,CAAC,KAAK,CAAC;QACvB;MAEJ;IACJ;IAEAsB,UAAU,CAAC,MAAM;MACbhB,SAAS,EAAE;IACf,CAAC,EAAC,IAAI,CAAC;IAEP,OAAO,MAAM;MACTH,UAAU,CAACoB,MAAM,CAAC,iCAAiC,CAAC,EAAC;IACzD,CAAC;EAEL,CAAC,EAAC,CAAC7B,GAAG,CAAC,CAAC;EAER,OAAO;IACHG,IAAI;IAAEE,SAAS;IAAEE;EACrB,CAAC;AAEL,CAAC;AAAAL,EAAA,CA9EKH,QAAQ;AAgFd,eAAgBA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}